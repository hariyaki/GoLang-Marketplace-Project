basePath: /
definitions:
  db.Listing:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      price_jpy:
        type: integer
      title:
        type: string
    type: object
  handlers.postListingRequest:
    properties:
      description:
        type: string
      price_jpy:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Harrison Lisk
  description: Simple product listing service for GoLang practice.
  title: Marketplace API
  version: "0.1"
paths:
  /listings:
    get:
      description: When the optional **q** query parameter is supplied, the results
        are filtered (case-insensitive substring match on *title*).
      parameters:
      - description: Title search keyword
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Listing'
            type: array
        "500":
          description: database error
          schema:
            type: string
      summary: List all listings or search by title
      tags:
      - listings
    post:
      consumes:
      - application/json
      description: Inserts a listing row and returns the created object.
      parameters:
      - description: Listing payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.postListingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Listing'
        "400":
          description: invalid JSON or missing fields
          schema:
            type: string
        "500":
          description: database error
          schema:
            type: string
      summary: Create a new listing
      tags:
      - listings
  /listings/{id}:
    get:
      parameters:
      - description: Listing ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Listing'
        "400":
          description: invalid id
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: database error
          schema:
            type: string
      summary: Retrieve a single listing
      tags:
      - listings
swagger: "2.0"
